{
    "openapi": "3.1.0",
    "info": {
        "title": "LandingLens API",
        "description": "\n**LandingLens API** is a RESTful API that allows you to use [LandingLens](https://app.landing.ai) programmatically.\nOur API has predictable resource-oriented URLs, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\n\nYou can use the LandingLens API to programmatically perform many tasks in LandingLens, including:\n* Create projects\n* Upload images to projects\n* Create classes\n* Train models\n* Deploy models to cloud-endpoints hosted by LandingAI (cloud deployment)\n\n## Tutorial\nCheck out this [tutorial](https://landing-ai.github.io/public-rest-api/tutorial/) to learn the basic workflow for using the LandingLens APIs.\n",
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "https://api.landing.ai",
            "description": "Production environment"
        }
    ],
    "paths": {
        "/v1/projects/{project_id}/images/{image_id}": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "Get Project Metadata",
                "operationId": "get_project_metadata_v1_projects__project_id__images__image_id__get",
                "parameters": [
                    {
                        "name": "image_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Image Id"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_ImageDetail_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/images": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "Upload Image",
                "operationId": "upload_image_v1_projects__project_id__images_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_image_v1_projects__project_id__images_post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_Image_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get Projects",
                "operationId": "get_projects_v1_projects_get",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Create Project",
                "operationId": "create_project_v1_projects_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get Project",
                "operationId": "get_project_v1_projects__project_id__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/active": {
            "put": {
                "tags": [
                    "Project"
                ],
                "summary": "Update Active Project",
                "operationId": "update_active_project_v1_projects__project_id__active_put",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IsActiveProject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/train": {
            "post": {
                "tags": [
                    "Training"
                ],
                "summary": "Create Training Job",
                "operationId": "create_training_job_v1_projects__project_id__train_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/TrainItem"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "title": "Training Config Request"
                            },
                            "examples": {
                                "classification": {
                                    "summary": "train classification model",
                                    "value": {
                                        "model": {
                                            "architecture": "ConvNext-[16M]",
                                            "hyperParams": {
                                                "epochs": 20
                                            }
                                        },
                                        "transforms": {
                                            "preprocessing": [
                                                {
                                                    "rescaleWithPadding": {
                                                        "height": 896,
                                                        "width": 1280,
                                                        "paddingValue": 0
                                                    }
                                                }
                                            ],
                                            "augmentations": [
                                                {
                                                    "horizontalFlip": {
                                                        "p": 0.5
                                                    }
                                                },
                                                {
                                                    "randAugment": {
                                                        "numberTransforms": 2,
                                                        "magnitude": 4
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_TrainingResponseData_"
                                },
                                "example": {
                                    "data": "edcfea45-33b5-4a52-8625-94d156e63fb3"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Training"
                ],
                "summary": "Get Training List",
                "operationId": "get_training_list_v1_projects__project_id__train_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_List_TrainingItem__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/train/{training_id}/status": {
            "get": {
                "tags": [
                    "Training"
                ],
                "summary": "Get Training Status",
                "operationId": "get_training_status_v1_projects__project_id__train__training_id__status_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "training_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Training Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_TrainingStatus_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/train/architectures": {
            "get": {
                "tags": [
                    "Training"
                ],
                "summary": "Get Train Archs",
                "operationId": "get_train_archs_v1_projects__project_id__train_architectures_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_List_ArchItem__"
                                },
                                "examples": {
                                    "classification": {
                                        "summary": "classification project",
                                        "value": {
                                            "data": [
                                                {
                                                    "name": "ConvNext-[16M]"
                                                },
                                                {
                                                    "name": "ConvNext-[29M]"
                                                }
                                            ]
                                        }
                                    },
                                    "object_detection": {
                                        "summary": "object detection project",
                                        "value": {
                                            "data": [
                                                {
                                                    "name": "RtmDet-[9M]"
                                                },
                                                {
                                                    "name": "RepPoints-[20M]"
                                                },
                                                {
                                                    "name": "RepPoints-[37M]"
                                                }
                                            ]
                                        }
                                    },
                                    "segmentation": {
                                        "summary": "segmentation project",
                                        "value": {
                                            "data": [
                                                {
                                                    "name": "SegFormer-[14M]"
                                                },
                                                {
                                                    "name": "FastVit-[14M]"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/classes": {
            "post": {
                "tags": [
                    "Classes"
                ],
                "summary": "Create Classes",
                "operationId": "create_classes_v1_projects__project_id__classes_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ClassMap"
                                },
                                "title": "Classes"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefectClassResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Classes"
                ],
                "summary": "Get Classes",
                "operationId": "get_classes_v1_projects__project_id__classes_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefectClassResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/autosplit": {
            "post": {
                "tags": [
                    "Training"
                ],
                "summary": "Auto Split",
                "operationId": "auto_split_v1_projects__project_id__autosplit_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoSplitBody"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/models": {
            "get": {
                "tags": [
                    "Model"
                ],
                "summary": "Get Models",
                "operationId": "get_models_v1_projects__project_id__models_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/models/{model_id}": {
            "get": {
                "tags": [
                    "Model"
                ],
                "summary": "Get Single Model",
                "operationId": "get_single_model_v1_projects__project_id__models__model_id__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Model Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/models/{model_id}/download": {
            "post": {
                "tags": [
                    "Model"
                ],
                "summary": "Get Model Download Url",
                "operationId": "get_model_download_url_v1_projects__project_id__models__model_id__download_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Model Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ModelDownloadRequest"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "title": "Payload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelDownloadResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/deployments": {
            "post": {
                "tags": [
                    "Deployment"
                ],
                "summary": "Create Deployment",
                "description": "This endpoint creates a deployment, which is an instance for running a\nmodel and performing predictions.\n\nTo create a deployment, you only need to provide a unique name. Upon\nsuccessful creation, the endpoint will return an HTTP URL where you can\nsend requests for predictions (also known as inferences).\n\nThe deployment name cannot be changed after creation.\n\nHere's a breakdown of the deployment creation options:\n\n**Model** (Optional): You can either:\n\n- Provide the model data during deployment creation, making it ready to use\nimmediately.\n- Upload a model to the deployment later and then use it for predictions.\n\n\n**Threshold** (Optional):\n\n- Specify a custom threshold value for your\npredictions.\n- If not provided, the default value used during model training will be\napplied.",
                "operationId": "create_deployment_v1_projects__project_id__deployments_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeploymentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_DeploymentItem_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Deployment"
                ],
                "summary": "Get Deployments",
                "operationId": "get_deployments_v1_projects__project_id__deployments_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_List_DeploymentItem__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/deployments/{deployment_id}": {
            "put": {
                "tags": [
                    "Deployment"
                ],
                "summary": "Update Deployment",
                "description": "You can update a deployment by providing one or both of the following:\n- A new model to be used for predictions.\n- A new threshold value to be used for classifying predictions.\n\nAt least one of these values must be provided for a successful update.\n\nUpdating the threshold value with a model already deployed has the\nfollowing behavior:\n- If you specify a new threshold value, it will override the model's\ndefault threshold.\n- If you don't specify a new threshold value, the model's default\nthreshold will be used.\n\nUpdating the deployment with a new model affects the threshold value as\nfollows:\n- If you specify a new threshold value along with the new model, the new\nthreshold will be used.\n- If you don't specify a new threshold value, the threshold associated\nwith the new model will be used.",
                "operationId": "update_deployment_v1_projects__project_id__deployments__deployment_id__put",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "deployment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Deployment Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeploymentUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_DeploymentItem_"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Deployment"
                ],
                "summary": "Get Single Deployment",
                "operationId": "get_single_deployment_v1_projects__project_id__deployments__deployment_id__get",
                "parameters": [
                    {
                        "name": "deployment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Deployment Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_DeploymentItem_"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/train/{training_id}/results/metrics": {
            "get": {
                "tags": [
                    "Training"
                ],
                "summary": "Get Metrics Summary For All Splits",
                "operationId": "get_metrics_summary_for_all_splits_v1_projects__project_id__train__training_id__results_metrics_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "training_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Training Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricsSummaryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/train/{training_id}/results/confusion-matrix": {
            "get": {
                "tags": [
                    "Training"
                ],
                "summary": "Get Confusion Matrix For All Splits",
                "operationId": "get_confusion_matrix_for_all_splits_v1_projects__project_id__train__training_id__results_confusion_matrix_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "training_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Training Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfusionMetricsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/wsi-embedding": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Wsi Embedding",
                "operationId": "tool_wsi_embedding_v1_tools_wsi_embedding_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WSIEmbeddingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WSIEmbeddingResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/qr-reader": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Qr Reader",
                "operationId": "tool_qr_reader_v1_tools_qr_reader_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QRReaderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QRReaderResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/owlv2": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Owlv2",
                "operationId": "tool_owlv2_v1_tools_owlv2_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Owlv2Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BboxResponse"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Tool Owlv2 V1 Tools Owlv2 Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/depth-anything-v2": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Depth Anything V2",
                "operationId": "tool_depth_anything_v2_v1_tools_depth_anything_v2_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepthAnythingV2Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepthAnythingV2Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/loca": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Loca",
                "operationId": "tool_loca_v1_tools_loca_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocaResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/florence2": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Florencev2",
                "operationId": "tool_florencev2_v1_tools_florence2_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FlorenceV2Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlorenceV2Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/nsfw-classification": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Nsfw Classification",
                "operationId": "tool_nsfw_classification_v1_tools_nsfw_classification_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NSFWRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NSFWResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/florence2-qa": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Florencev2 Qa",
                "operationId": "tool_florencev2_qa_v1_tools_florence2_qa_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FlorenceQARequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlorenceV2QAResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/pose-detector": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Pose Detection",
                "operationId": "tool_pose_detection_v1_tools_pose_detector_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PoseDetectionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PoseDetectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/barcode-reader": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Barcode Reader",
                "operationId": "tool_barcode_reader_v1_tools_barcode_reader_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BarcodeReaderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BarcodeReaderResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/internlm-xcomposer2": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Internlm Xcomposer2",
                "operationId": "tool_internlm_xcomposer2_v1_tools_internlm_xcomposer2_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_tool_internlm_xcomposer2_v1_tools_internlm_xcomposer2_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternLMXComposer2Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/video-temporal-localization": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Video Temporal Localization",
                "description": "Performs temporal localization on a video using the specified model\n\nArgs:\n    model: model used\n    prompt (str): prompt for the task\n    video: video file to perform temporal localization on\n    chunk_length (float, optional): length of each chunk in seconds\n    chunk_length_seconds (float, optional): alternative len for chunk in seconds\n    chunk_length_frames (int, optional): length of each chunk in frames\n    baseten_inference_sender: The dependency for the baseten inference sender\n\nReturns:\n    VideoTemporalLocalizationResponse | JSONResponse",
                "operationId": "tool_video_temporal_localization_v1_tools_video_temporal_localization_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/routers__tools__video_temporal_localization__FormData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VideoTemporalLocalizationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/florence2-sam2": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Florence2 Sam2",
                "operationId": "tool_florence2_sam2_v1_tools_florence2_sam2_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/routers__tools__florence2_sam2__FormData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Florence2SAM2Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/text-to-object-detection": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Text To Od",
                "operationId": "tool_text_to_od_v1_tools_text_to_object_detection_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/routers__tools__text_to_object_detection__FormData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/visual-prompts-to-object-detection": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Visual Prompts To Od",
                "operationId": "tool_visual_prompts_to_od_v1_tools_visual_prompts_to_object_detection_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_tool_visual_prompts_to_od_v1_tools_visual_prompts_to_object_detection_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/countgd": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Countgd",
                "operationId": "tool_countgd_v1_tools_countgd_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CountGDRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BboxResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/flux1": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Flux1",
                "description": "Performs Image Generation or Mask Inpainting using the specified task\n\nArgs:\n    data (Dict[str, Any]): The input dictionary containing the following keys:\n        - task (Flux1Task): The task to perform using the model:\n            either image generation (\"generation\")\n            or mask inpainting (\"inpainting\").\n        - prompt (str): The text prompt describing the desired modifications.\n        - image (Image.Image): The original image to be modified.\n        - mask_image (Image.Image): The mask image indicating areas to be inpainted.\n        - height (`int`, *optional*):\n            The height in pixels of the generated image.\n            This is set to 512 by default.\n        - width (`int`, *optional*):\n            The width in pixels of the generated image.\n            This is set to 512 by default.\n        - num_inference_steps (`int`, *optional*, defaults to 28):\n        - guidance_scale (`float`, *optional*, defaults to 3.5):\n            Guidance scale as defined in Classifier-Free Diffusion Guidance.\n            Higher guidance scale encourages to generate images\n            that are closely linked to the text `prompt`,\n            usually at the expense of lower image quality.\n        - num_images_per_prompt (`int`, *optional*, defaults to 1):\n            The number of images to generate per prompt.\n        - max_sequence_length (`int` defaults to 512):\n            Maximum sequence length to use with the `prompt`.\n            to make generation deterministic.\n        - strength (`float`, *optional*, defaults to 0.6):\n            Indicates extent to transform the reference `image`.\n            Must be between 0 and 1.\n            A value of 1 essentially ignores `image`.\n        - seed (`int`, *optional*): The seed to use for the random number generator.\n            If not provided, a random seed is used.\n\n    baseten_inference_sender: Dependency Injection for\n        sending request to the baseten server.\n\nReturns:\n    Flux1Response | JSONResponse",
                "operationId": "tool_flux1_v1_tools_flux1_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Flux1Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Flux1Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/image-to-text": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Image To Text",
                "operationId": "tool_image_to_text_v1_tools_image_to_text_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/routers__tools__image_to_text__FormData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageToTextResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/text-to-instance-segmentation": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Text To Seg",
                "operationId": "tool_text_to_seg_v1_tools_text_to_instance_segmentation_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/routers__tools__text_to_instance_segmentation__FormData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextToInstanceSegmentationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/classification": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Classification",
                "description": "Performs Image Generation or Mask Inpainting using the specified model.\n\nArgs:\n    data (Dict[str, Any]): The input dictionary containing the following keys:\n        - model (ClassificationModel):\n            The model to be used for image classification.\n            Currently, only SigLIP Zero-shot Image Classification is supported.\n        - image (Image.Image):\n            The original image to be classified.\n        - labels (List[str]):\n            The candidate labels for the image classification model.\n\n    baseten_inference_sender: Dependency Injection for\n        sending request to the baseten server.\n\nReturns:\n    ClassificationResponse | JSONResponse\n        The list of classification results, each containing a label and a score.",
                "operationId": "tool_classification_v1_tools_classification_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ClassificationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClassificationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/sam2": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Sam2",
                "operationId": "tool_sam2_v1_tools_sam2_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SAM2Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextToInstanceSegmentationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/document-analysis": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Doc Analysis",
                "description": "Performs Document Analysis using the specified parameters\n\nArgs:\n    data (DocAnalysisRequest): The input data containing the following fields:\n        - image (UploadFile | None): The image file to analyze.\n        - pdf (UploadFile | None): The PDF file to analyze.\n        - parse_text (bool): Whether to parse and analyze text.\n        - parse_tables (bool): Whether to parse and analyze tables.\n        - parse_figures (bool): Whether to parse and analyze figures.\n        - summary_verbosity (Verbosity): Verbosity of the AI summary for each chunk.\n        - return_chunk_crops (bool): return the crop of each chunk as base64 image.\n        - return_page_crops (bool): return the crop of each page as base64 image.\n        - caption_format (OutputFormat): Format of the caption for each chunk.\n        - response_format (OutputFormat): Format of the overall HTTP response.\n        - filename (str | None): Optional filename to be integrated into API output.",
                "operationId": "tool_doc_analysis_v1_tools_document_analysis_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/routers__tools__doc_analysis__DocAnalysisRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocAnalysisResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/agentic-document-analysis": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Agentic Doc Analysis",
                "description": "Performs Document Analysis using the specified parameters\n\nArgs:\n    data (DocAnalysisRequest): The input data containing the following fields:\n        - image (UploadFile | None): The image file to analyze.\n        - pdf (UploadFile | None): The PDF file to analyze.\n        - include_marginalia (bool): Whether to include marginalia (header, footer, etc.) on the response.\n        - include_metadata_in_markdown (bool): include chunk metadata in the markdown output as HTML comments (invisible to markdown renderers)",
                "operationId": "tool_agentic_doc_analysis_v1_tools_agentic_document_analysis_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/routers__tools__agentic_doc_analysis__DocAnalysisRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgenticDocAnalysisResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/embeddings": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Embeddings",
                "operationId": "tool_embeddings_v1_tools_embeddings_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbeddingsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmbeddingsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/custom-object-detection": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Object Detection",
                "operationId": "tool_object_detection_v1_tools_custom_object_detection_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/routers__tools__object_detection__FormData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tools/agentic-object-detection": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Tool Agentic Od",
                "operationId": "tool_agentic_od_v1_tools_agentic_object_detection_post",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 300,
                            "title": "Timeout"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/routers__tools__agentic_od__FormData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/dataset/snapshots": {
            "get": {
                "tags": [
                    "Snapshot"
                ],
                "summary": "List Snapshots",
                "operationId": "list_snapshots_v1_projects__project_id__dataset_snapshots_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_list_SnapshotItem__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/dataset/snapshots/{snapshot_version}/export": {
            "post": {
                "tags": [
                    "Snapshot"
                ],
                "summary": "Post Snapshot Export",
                "operationId": "post_snapshot_export_v1_projects__project_id__dataset_snapshots__snapshot_version__export_post",
                "parameters": [
                    {
                        "name": "snapshot_version",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Snapshot Version"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Body_post_snapshot_export_v1_projects__project_id__dataset_snapshots__snapshot_version__export_post"
                                    }
                                ],
                                "title": "Body"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_SnapshotExportItem_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Snapshot"
                ],
                "summary": "Get Snapshot Export",
                "operationId": "get_snapshot_export_v1_projects__project_id__dataset_snapshots__snapshot_version__export_get",
                "parameters": [
                    {
                        "name": "snapshot_version",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Snapshot Version"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_SnapshotExportItem_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/dataset/snapshots/{snapshot_version}/metadata": {
            "get": {
                "tags": [
                    "Snapshot"
                ],
                "summary": "Get Snapshot Metadata",
                "operationId": "get_snapshot_metadata_v1_projects__project_id__dataset_snapshots__snapshot_version__metadata_get",
                "parameters": [
                    {
                        "name": "snapshot_version",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Snapshot Version"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_SnapshotExportItem_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/metadata": {
            "get": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Project Metadata",
                "operationId": "get_project_metadata_v1_projects__project_id__metadata_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_list_MetadataItem__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Create Metadata",
                "operationId": "create_metadata_v1_projects__project_id__metadata_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_MetadataItem_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/metadata/{metadata_id}": {
            "post": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Update Metadata",
                "operationId": "update_metadata_v1_projects__project_id__metadata__metadata_id__post",
                "parameters": [
                    {
                        "name": "metadata_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Metadata Id"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_MetadataItem_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/images/metadata": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "Append Metadata To Media List",
                "operationId": "append_metadata_to_media_list_v1_projects__project_id__images_metadata_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImageMetadataAssign"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_list_ImageMetadata__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/images/{image_id}/metadata": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "Replace image metadata",
                "operationId": "update_media_metadata_v1_projects__project_id__images__image_id__metadata_post",
                "parameters": [
                    {
                        "name": "image_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Image Id"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImageMetadataReplace"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_ImageMetadata_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get Project Tags",
                "operationId": "get_project_tags_v1_projects__project_id__tags_get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_list_TagItem__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Create Project Tag",
                "operationId": "create_project_tag_v1_projects__project_id__tags_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagBase"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_TagItem_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/tags/{tag_id}": {
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Update Project Tag",
                "operationId": "update_project_tag_v1_projects__project_id__tags__tag_id__post",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Tag Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_TagItem_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/images/tags": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "Append Tags To Media List",
                "operationId": "append_tags_to_media_list_v1_projects__project_id__images_tags_post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 60,
                            "title": "Timeout"
                        }
                    },
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Apikey"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImageTagAssign"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse_list_TagItem__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AgenticDocAnalysisResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "AgenticDocAnalysisResponse"
            },
            "ArchItem": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "ArchItem"
            },
            "AutoSplitBody": {
                "properties": {
                    "splitPercentages": {
                        "$ref": "#/components/schemas/SplitPercentages"
                    },
                    "selectOption": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AutoSplitOptions"
                            }
                        ],
                        "description": "`all-labeled` takes all labeled images, whether they have a split or not.\nThis option modifies the splits, which can be risky and inconvenient if you manually assigned the splits, as it will override your work.\n\n`without-split` only takes the labeled images that do not yet have a split. It does not modify the splits already assigned to the images that previously had splits."
                    }
                },
                "type": "object",
                "required": [
                    "splitPercentages",
                    "selectOption"
                ],
                "title": "AutoSplitBody"
            },
            "AutoSplitOptions": {
                "type": "string",
                "enum": [
                    "all-labeled",
                    "without-split"
                ],
                "title": "AutoSplitOptions"
            },
            "BarCodeReaderResponseData": {
                "properties": {
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "x": {
                        "type": "integer",
                        "title": "X"
                    },
                    "y": {
                        "type": "integer",
                        "title": "Y"
                    },
                    "format": {
                        "type": "string",
                        "title": "Format"
                    }
                },
                "type": "object",
                "required": [
                    "text",
                    "x",
                    "y",
                    "format"
                ],
                "title": "BarCodeReaderResponseData"
            },
            "BarcodeReaderRequest": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    }
                },
                "type": "object",
                "required": [
                    "image"
                ],
                "title": "BarcodeReaderRequest"
            },
            "BarcodeReaderResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BarCodeReaderResponseData"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BarcodeReaderResponse"
            },
            "BaseResponse_DeploymentItem_": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DeploymentItem"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[DeploymentItem]"
            },
            "BaseResponse_ImageDetail_": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ImageDetail"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[ImageDetail]"
            },
            "BaseResponse_ImageMetadata_": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ImageMetadata"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[ImageMetadata]"
            },
            "BaseResponse_Image_": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Image"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[Image]"
            },
            "BaseResponse_List_ArchItem__": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ArchItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[List[ArchItem]]"
            },
            "BaseResponse_List_DeploymentItem__": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DeploymentItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[List[DeploymentItem]]"
            },
            "BaseResponse_List_TrainingItem__": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/TrainingItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[List[TrainingItem]]"
            },
            "BaseResponse_MetadataItem_": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MetadataItem"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[MetadataItem]"
            },
            "BaseResponse_SnapshotExportItem_": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SnapshotExportItem"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[SnapshotExportItem]"
            },
            "BaseResponse_TagItem_": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TagItem"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[TagItem]"
            },
            "BaseResponse_TrainingResponseData_": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TrainingResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[TrainingResponseData]"
            },
            "BaseResponse_TrainingStatus_": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TrainingStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[TrainingStatus]"
            },
            "BaseResponse_list_ImageMetadata__": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ImageMetadata"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[list[ImageMetadata]]"
            },
            "BaseResponse_list_MetadataItem__": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/MetadataItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[list[MetadataItem]]"
            },
            "BaseResponse_list_SnapshotItem__": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SnapshotItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[list[SnapshotItem]]"
            },
            "BaseResponse_list_TagItem__": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/TagItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BaseResponse[list[TagItem]]"
            },
            "BboxResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BboxResponseData"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "BboxResponse"
            },
            "BboxResponseData": {
                "properties": {
                    "label": {
                        "type": "string",
                        "title": "Label"
                    },
                    "score": {
                        "type": "number",
                        "title": "Score"
                    },
                    "bbox": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "title": "Bbox"
                    }
                },
                "type": "object",
                "required": [
                    "label",
                    "score",
                    "bbox"
                ],
                "title": "BboxResponseData"
            },
            "Body_post_snapshot_export_v1_projects__project_id__dataset_snapshots__snapshot_version__export_post": {
                "properties": {
                    "retry": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Retry",
                        "default": false
                    }
                },
                "type": "object",
                "title": "Body_post_snapshot_export_v1_projects__project_id__dataset_snapshots__snapshot_version__export_post"
            },
            "Body_tool_internlm_xcomposer2_v1_tools_internlm_xcomposer2_post": {
                "properties": {
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    },
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    }
                },
                "type": "object",
                "required": [
                    "prompt"
                ],
                "title": "Body_tool_internlm_xcomposer2_v1_tools_internlm_xcomposer2_post"
            },
            "Body_tool_visual_prompts_to_od_v1_tools_visual_prompts_to_object_detection_post": {
                "properties": {
                    "visual_prompts": {
                        "type": "string",
                        "title": "Visual Prompts"
                    },
                    "model": {
                        "$ref": "#/components/schemas/VisualPromptsToODModel"
                    },
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    }
                },
                "type": "object",
                "required": [
                    "visual_prompts",
                    "model"
                ],
                "title": "Body_tool_visual_prompts_to_od_v1_tools_visual_prompts_to_object_detection_post"
            },
            "Body_upload_image_v1_projects__project_id__images_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "label": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Label"
                    },
                    "split": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SplitEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags"
                    },
                    "nothing_to_label": {
                        "type": "boolean",
                        "title": "Nothing To Label",
                        "default": false
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "file",
                    "name"
                ],
                "title": "Body_upload_image_v1_projects__project_id__images_post"
            },
            "ClassMap": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Color"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "default": ""
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "ClassMap"
            },
            "ClassMetrics": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id",
                        "description": "The class id"
                    },
                    "performance": {
                        "type": "number",
                        "title": "Performance"
                    },
                    "recall": {
                        "type": "number",
                        "title": "Recall"
                    },
                    "precision": {
                        "type": "number",
                        "title": "Precision"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "performance",
                    "recall",
                    "precision"
                ],
                "title": "ClassMetrics"
            },
            "ClassificationData": {
                "properties": {
                    "scores": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "title": "Scores"
                    },
                    "labels": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Labels"
                    }
                },
                "type": "object",
                "required": [
                    "scores",
                    "labels"
                ],
                "title": "ClassificationData"
            },
            "ClassificationModel": {
                "type": "string",
                "enum": [
                    "siglip"
                ],
                "const": "siglip",
                "title": "ClassificationModel"
            },
            "ClassificationRequest": {
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/ClassificationModel"
                    },
                    "image": {
                        "type": "string",
                        "format": "binary",
                        "title": "Image"
                    },
                    "labels": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Labels"
                    }
                },
                "type": "object",
                "required": [
                    "model",
                    "image",
                    "labels"
                ],
                "title": "ClassificationRequest"
            },
            "ClassificationResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ClassificationData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "ClassificationResponse"
            },
            "ConfusionMatrix": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "correctPredictions": {
                        "items": {
                            "$ref": "#/components/schemas/PredictionItem"
                        },
                        "type": "array",
                        "title": "Correctpredictions"
                    },
                    "falseNegativePredictions": {
                        "items": {
                            "$ref": "#/components/schemas/PredictionItem"
                        },
                        "type": "array",
                        "title": "Falsenegativepredictions"
                    },
                    "falsePositivePredictions": {
                        "items": {
                            "$ref": "#/components/schemas/PredictionItem"
                        },
                        "type": "array",
                        "title": "Falsepositivepredictions"
                    },
                    "misclassifications": {
                        "items": {
                            "$ref": "#/components/schemas/PredictionItem"
                        },
                        "type": "array",
                        "title": "Misclassifications"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "correctPredictions",
                    "falseNegativePredictions",
                    "falsePositivePredictions",
                    "misclassifications"
                ],
                "title": "ConfusionMatrix"
            },
            "ConfusionMetricsResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ConfusionMatrix"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "ConfusionMetricsResponse"
            },
            "CountGDRequest": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    },
                    "prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt"
                    },
                    "visual_prompts": {
                        "anyOf": [
                            {
                                "items": {
                                    "items": {
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Visual Prompts"
                    }
                },
                "type": "object",
                "required": [
                    "image"
                ],
                "title": "CountGDRequest"
            },
            "DefectClassResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/LabelClass"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "DefectClassResponse"
            },
            "DeploymentInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "modelId": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modelid"
                    },
                    "threshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Threshold"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "DeploymentInput"
            },
            "DeploymentItem": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "predictionUrl": {
                        "type": "string",
                        "title": "Predictionurl"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "modelId": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modelid"
                    },
                    "threshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Threshold"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "predictionUrl",
                    "name"
                ],
                "title": "DeploymentItem"
            },
            "DeploymentUpdateInput": {
                "properties": {
                    "modelId": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modelid"
                    },
                    "threshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Threshold"
                    }
                },
                "type": "object",
                "title": "DeploymentUpdateInput"
            },
            "DepthAnythingV2Data": {
                "properties": {
                    "map": {
                        "items": {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "type": "array",
                        "title": "Map"
                    }
                },
                "type": "object",
                "required": [
                    "map"
                ],
                "title": "DepthAnythingV2Data"
            },
            "DepthAnythingV2Request": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    },
                    "grayscale": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Grayscale",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "image"
                ],
                "title": "DepthAnythingV2Request"
            },
            "DepthAnythingV2Response": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DepthAnythingV2Data"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "DepthAnythingV2Response"
            },
            "DocAnalysisResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "DocAnalysisResponse"
            },
            "Embedding": {
                "properties": {
                    "embedding": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "title": "Embedding"
                    }
                },
                "type": "object",
                "required": [
                    "embedding"
                ],
                "title": "Embedding"
            },
            "EmbeddingsModel": {
                "type": "string",
                "enum": [
                    "stella1.5b"
                ],
                "const": "stella1.5b",
                "title": "EmbeddingsModel"
            },
            "EmbeddingsRequest": {
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/EmbeddingsModel"
                    },
                    "input": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Input"
                    }
                },
                "type": "object",
                "required": [
                    "model",
                    "input"
                ],
                "title": "EmbeddingsRequest"
            },
            "EmbeddingsResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Embedding"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "EmbeddingsResponse"
            },
            "ErrorMessage": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "ErrorMessage"
            },
            "Florence2SAM2IdInstance": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "label": {
                        "type": "string",
                        "title": "Label"
                    },
                    "mask": {
                        "$ref": "#/components/schemas/SegmentationBitMaskRLE"
                    },
                    "bounding_box": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        },
                        "type": "array",
                        "maxItems": 4,
                        "minItems": 4,
                        "title": "Bounding Box"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "label",
                    "mask",
                    "bounding_box"
                ],
                "title": "Florence2SAM2IdInstance"
            },
            "Florence2SAM2Instance": {
                "properties": {
                    "mask": {
                        "$ref": "#/components/schemas/SegmentationBitMaskRLE"
                    },
                    "label": {
                        "type": "string",
                        "title": "Label"
                    },
                    "bounding_box": {
                        "anyOf": [
                            {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ]
                                },
                                "type": "array",
                                "maxItems": 4,
                                "minItems": 4
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bounding Box"
                    }
                },
                "type": "object",
                "required": [
                    "mask",
                    "label"
                ],
                "title": "Florence2SAM2Instance"
            },
            "Florence2SAM2Response": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/Florence2SAM2Instance"
                                    },
                                    "type": "object"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "Florence2SAM2Response"
            },
            "FlorenceQARequest": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    },
                    "question": {
                        "type": "string",
                        "title": "Question"
                    }
                },
                "type": "object",
                "required": [
                    "image",
                    "question"
                ],
                "title": "FlorenceQARequest"
            },
            "FlorenceV2QAResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "FlorenceV2QAResponse"
            },
            "FlorenceV2Request": {
                "properties": {
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 50000000
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "images": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "maxItems": 50000000
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Images"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 50000000
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    },
                    "video_bytes": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video Bytes"
                    },
                    "task": {
                        "$ref": "#/components/schemas/PromptTask"
                    },
                    "prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt"
                    }
                },
                "type": "object",
                "required": [
                    "task"
                ],
                "title": "FlorenceV2Request"
            },
            "FlorenceV2Response": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "FlorenceV2Response"
            },
            "Flux1Request": {
                "properties": {
                    "task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Flux1Task"
                            }
                        ],
                        "default": "generation"
                    },
                    "prompt": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Prompt"
                    },
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "mask_image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mask Image"
                    },
                    "height": {
                        "type": "integer",
                        "minimum": 8.0,
                        "title": "Height",
                        "default": 512
                    },
                    "width": {
                        "type": "integer",
                        "minimum": 8.0,
                        "title": "Width",
                        "default": 512
                    },
                    "strength": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Strength",
                        "default": 0.6
                    },
                    "num_inference_steps": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Num Inference Steps",
                        "default": 10
                    },
                    "guidance_scale": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Guidance Scale",
                        "default": 3.5
                    },
                    "num_images_per_prompt": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Num Images Per Prompt",
                        "default": 1
                    },
                    "max_sequence_length": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 512.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Sequence Length",
                        "default": 512
                    },
                    "seed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Seed"
                    }
                },
                "type": "object",
                "required": [
                    "prompt"
                ],
                "title": "Flux1Request"
            },
            "Flux1Response": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "Flux1Response"
            },
            "Flux1Task": {
                "type": "string",
                "enum": [
                    "generation",
                    "inpainting",
                    "img2img"
                ],
                "title": "Flux1Task"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Image": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "uploadTime": {
                        "type": "string",
                        "title": "Uploadtime"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "uploadTime"
                ],
                "title": "Image"
            },
            "ImageDetail": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "uploadTime": {
                        "type": "string",
                        "title": "Uploadtime"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    },
                    "tagIds": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tagids"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "uploadTime",
                    "metadata",
                    "tagIds"
                ],
                "title": "ImageDetail"
            },
            "ImageMetadata": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "items": {
                                        "type": "integer"
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "mediaId": {
                        "type": "integer",
                        "title": "Mediaid"
                    }
                },
                "type": "object",
                "required": [
                    "metadata",
                    "mediaId"
                ],
                "title": "ImageMetadata"
            },
            "ImageMetadataAssign": {
                "properties": {
                    "metadataAppend": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "items": {
                                        "type": "integer"
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadataappend"
                    },
                    "mediaIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Mediaids"
                    },
                    "allMedia": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allmedia",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "metadataAppend",
                    "mediaIds"
                ],
                "title": "ImageMetadataAssign"
            },
            "ImageMetadataReplace": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "items": {
                                        "type": "integer"
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "metadata"
                ],
                "title": "ImageMetadataReplace"
            },
            "ImageTagAssign": {
                "properties": {
                    "tagNames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tagnames"
                    },
                    "mediaIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Mediaids"
                    },
                    "allMedia": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allmedia",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "tagNames",
                    "mediaIds"
                ],
                "title": "ImageTagAssign"
            },
            "ImageToText": {
                "type": "string",
                "enum": [
                    "qwen2vl",
                    "internlm-xcomposer",
                    "qwen25vl"
                ],
                "title": "ImageToText"
            },
            "ImageToTextResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "ImageToTextResponse"
            },
            "InternLMXComposer2Data": {
                "properties": {
                    "answer": {
                        "type": "string",
                        "title": "Answer"
                    }
                },
                "type": "object",
                "required": [
                    "answer"
                ],
                "title": "InternLMXComposer2Data"
            },
            "InternLMXComposer2Response": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/InternLMXComposer2Data"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "InternLMXComposer2Response"
            },
            "IsActiveProject": {
                "properties": {
                    "isActive": {
                        "type": "boolean",
                        "title": "Isactive"
                    }
                },
                "type": "object",
                "required": [
                    "isActive"
                ],
                "title": "IsActiveProject"
            },
            "JobStatus": {
                "type": "string",
                "enum": [
                    "CREATED",
                    "STARTING",
                    "TRAINING",
                    "EVALUATING",
                    "PUBLISHING",
                    "SUCCEEDED",
                    "FAILED"
                ],
                "title": "JobStatus"
            },
            "LabelClass": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "index": {
                        "type": "integer",
                        "title": "Index"
                    },
                    "color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Color"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "index",
                    "color",
                    "description"
                ],
                "title": "LabelClass"
            },
            "LocaRequest": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    },
                    "bbox": {
                        "anyOf": [
                            {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ]
                                },
                                "type": "array",
                                "maxItems": 4,
                                "minItems": 4
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bbox"
                    }
                },
                "type": "object",
                "required": [
                    "image"
                ],
                "title": "LocaRequest"
            },
            "LocaResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LocaResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "LocaResponse"
            },
            "LocaResponseData": {
                "properties": {
                    "count": {
                        "type": "integer",
                        "title": "Count"
                    },
                    "heat_map": {
                        "title": "Heat Map"
                    }
                },
                "type": "object",
                "required": [
                    "count",
                    "heat_map"
                ],
                "title": "LocaResponseData"
            },
            "MetadataCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "type": {
                        "$ref": "#/components/schemas/MetadataType"
                    },
                    "allowMultiple": {
                        "type": "boolean",
                        "title": "Allowmultiple"
                    },
                    "predefinedChoices": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Predefinedchoices"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type",
                    "allowMultiple",
                    "predefinedChoices"
                ],
                "title": "MetadataCreate"
            },
            "MetadataItem": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "type": {
                        "$ref": "#/components/schemas/MetadataType"
                    },
                    "allowMultiple": {
                        "type": "boolean",
                        "title": "Allowmultiple"
                    },
                    "predefinedChoices": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Predefinedchoices"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "valueFlexible": {
                        "type": "boolean",
                        "title": "Valueflexible"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type",
                    "allowMultiple",
                    "predefinedChoices",
                    "id",
                    "valueFlexible"
                ],
                "title": "MetadataItem"
            },
            "MetadataType": {
                "type": "string",
                "enum": [
                    "text",
                    "number",
                    "boolean"
                ],
                "title": "MetadataType"
            },
            "MetadataUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "allowMultiple": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allowmultiple"
                    },
                    "predefinedChoicesAppend": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Predefinedchoicesappend"
                    },
                    "valueFlexible": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Valueflexible"
                    }
                },
                "type": "object",
                "required": [
                    "allowMultiple",
                    "predefinedChoicesAppend",
                    "valueFlexible"
                ],
                "title": "MetadataUpdate"
            },
            "Metric": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "performance": {
                        "type": "number",
                        "title": "Performance"
                    },
                    "recall": {
                        "type": "number",
                        "title": "Recall"
                    },
                    "precision": {
                        "type": "number",
                        "title": "Precision"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "performance",
                    "recall",
                    "precision"
                ],
                "title": "Metric"
            },
            "MetricsSummary": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The split name"
                    },
                    "classes": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ClassMetrics"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Classes"
                    },
                    "metrics": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Metric"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metrics"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "classes",
                    "metrics"
                ],
                "title": "MetricsSummary"
            },
            "MetricsSummaryResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/MetricsSummary"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "MetricsSummaryResponse"
            },
            "ModelDownload": {
                "properties": {
                    "downloadUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Downloadurl"
                    },
                    "threshold": {
                        "type": "number",
                        "title": "Threshold"
                    }
                },
                "type": "object",
                "required": [
                    "threshold"
                ],
                "title": "ModelDownload"
            },
            "ModelDownloadRequest": {
                "properties": {
                    "threshold": {
                        "type": "number",
                        "title": "Threshold"
                    }
                },
                "type": "object",
                "required": [
                    "threshold"
                ],
                "title": "ModelDownloadRequest"
            },
            "ModelDownloadResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ModelDownload"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "ModelDownloadResponse"
            },
            "ModelItem": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The model ID"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "ModelItem"
            },
            "ModelResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ModelItem"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "ModelResponse"
            },
            "ModelsResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ModelItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "ModelsResponse"
            },
            "NSFWRequest": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    }
                },
                "type": "object",
                "required": [
                    "image"
                ],
                "title": "NSFWRequest"
            },
            "NSFWResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NSFWResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "NSFWResponse"
            },
            "NSFWResponseData": {
                "properties": {
                    "label": {
                        "type": "string",
                        "title": "Label"
                    },
                    "score": {
                        "type": "number",
                        "title": "Score"
                    }
                },
                "type": "object",
                "required": [
                    "label",
                    "score"
                ],
                "title": "NSFWResponseData"
            },
            "ODResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "items": {
                                        "$ref": "#/components/schemas/ODResponseData"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "ODResponse"
            },
            "ODResponseData": {
                "properties": {
                    "label": {
                        "type": "string",
                        "title": "Label"
                    },
                    "score": {
                        "type": "number",
                        "title": "Score"
                    },
                    "bounding_box": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        },
                        "type": "array",
                        "maxItems": 4,
                        "minItems": 4,
                        "title": "Bounding Box"
                    }
                },
                "type": "object",
                "required": [
                    "label",
                    "score",
                    "bounding_box"
                ],
                "title": "ODResponseData"
            },
            "OutputFormat": {
                "type": "string",
                "enum": [
                    "markdown",
                    "json",
                    "xml",
                    "text"
                ],
                "title": "OutputFormat"
            },
            "Owlv2Request": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    },
                    "prompts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Prompts"
                    },
                    "confidence": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confidence",
                        "default": 0.2
                    }
                },
                "type": "object",
                "required": [
                    "image",
                    "prompts"
                ],
                "title": "Owlv2Request"
            },
            "PoseDetectionRequest": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    }
                },
                "type": "object",
                "required": [
                    "image"
                ],
                "title": "PoseDetectionRequest"
            },
            "PoseDetectionResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "PoseDetectionResponse"
            },
            "PredictionItem": {
                "properties": {
                    "count": {
                        "type": "integer",
                        "title": "Count"
                    },
                    "groundTruthClassId": {
                        "type": "integer",
                        "title": "Groundtruthclassid"
                    },
                    "predictedClassId": {
                        "type": "integer",
                        "title": "Predictedclassid"
                    }
                },
                "type": "object",
                "required": [
                    "count",
                    "groundTruthClassId",
                    "predictedClassId"
                ],
                "title": "PredictionItem"
            },
            "ProjectInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "projectType": {
                        "$ref": "#/components/schemas/ProjectType"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "projectType"
                ],
                "title": "ProjectInput"
            },
            "ProjectResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ProjectResponseItem"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "ProjectResponse"
            },
            "ProjectResponseItem": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "projectType": {
                        "$ref": "#/components/schemas/ProjectType"
                    },
                    "isActive": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Isactive"
                    },
                    "createdAt": {
                        "type": "string",
                        "title": "Createdat"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "projectType",
                    "createdAt"
                ],
                "title": "ProjectResponseItem"
            },
            "ProjectType": {
                "type": "string",
                "enum": [
                    "classification",
                    "object-detection",
                    "segmentation",
                    "anomaly-detection"
                ],
                "title": "ProjectType"
            },
            "ProjectsResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ProjectResponseItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "ProjectsResponse"
            },
            "PromptTask": {
                "type": "string",
                "enum": [
                    "<CAPTION>",
                    "<CAPTION_TO_PHRASE_GROUNDING>",
                    "<DETAILED_CAPTION>",
                    "<MORE_DETAILED_CAPTION>",
                    "<DENSE_REGION_CAPTION>",
                    "<OPEN_VOCABULARY_DETECTION>",
                    "<OD>",
                    "<OCR>",
                    "<OCR_WITH_REGION>",
                    "<REGION_PROPOSAL>",
                    "<REFERRING_EXPRESSION_SEGMENTATION>",
                    "<REGION_TO_SEGMENTATION>",
                    "<REGION_TO_CATEGORY>",
                    "<REGION_TO_DESCRIPTION>"
                ],
                "title": "PromptTask"
            },
            "QRReaderRequest": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    }
                },
                "type": "object",
                "required": [
                    "image"
                ],
                "title": "QRReaderRequest"
            },
            "QRReaderResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/QRReaderResponseData"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "QRReaderResponse"
            },
            "QRReaderResponseData": {
                "properties": {
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "x": {
                        "type": "integer",
                        "title": "X"
                    },
                    "y": {
                        "type": "integer",
                        "title": "Y"
                    }
                },
                "type": "object",
                "required": [
                    "text",
                    "x",
                    "y"
                ],
                "title": "QRReaderResponseData"
            },
            "SAM2Request": {
                "properties": {
                    "images": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Images"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    },
                    "bboxes": {
                        "type": "string",
                        "contentMediaType": "application/json",
                        "contentSchema": {},
                        "title": "Bboxes"
                    },
                    "chunk_length_frames": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Length Frames"
                    }
                },
                "type": "object",
                "required": [
                    "bboxes"
                ],
                "title": "SAM2Request"
            },
            "SegmentationBitMaskRLE": {
                "properties": {
                    "counts": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Counts"
                    },
                    "size": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Size"
                    }
                },
                "type": "object",
                "required": [
                    "counts",
                    "size"
                ],
                "title": "SegmentationBitMaskRLE"
            },
            "SnapshotExportItem": {
                "properties": {
                    "status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SnapshotExportStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "downloadUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Downloadurl"
                    },
                    "downloadExpiresAt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Downloadexpiresat",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "downloadExpiresAt"
                ],
                "title": "SnapshotExportItem"
            },
            "SnapshotExportStatus": {
                "type": "string",
                "enum": [
                    "Started",
                    "In Progress",
                    "Completed",
                    "Failed"
                ],
                "title": "SnapshotExportStatus"
            },
            "SnapshotItem": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version"
                    },
                    "creationTime": {
                        "type": "string",
                        "title": "Creationtime"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "version",
                    "creationTime"
                ],
                "title": "SnapshotItem"
            },
            "SplitEnum": {
                "type": "string",
                "enum": [
                    "train",
                    "dev",
                    "test"
                ],
                "title": "SplitEnum"
            },
            "SplitPercentages": {
                "properties": {
                    "train": {
                        "type": "integer",
                        "title": "Train"
                    },
                    "dev": {
                        "type": "integer",
                        "title": "Dev"
                    },
                    "test": {
                        "type": "integer",
                        "title": "Test"
                    }
                },
                "type": "object",
                "required": [
                    "train",
                    "dev",
                    "test"
                ],
                "title": "SplitPercentages"
            },
            "TagBase": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "TagBase"
            },
            "TagItem": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "integer",
                        "title": "Orgid"
                    },
                    "isArchived": {
                        "type": "boolean",
                        "title": "Isarchived"
                    },
                    "createdAt": {
                        "type": "string",
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updatedat"
                    },
                    "color": {
                        "type": "string",
                        "title": "Color"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "orgId",
                    "isArchived",
                    "createdAt",
                    "updatedAt",
                    "color"
                ],
                "title": "TagItem"
            },
            "TemporalLocalizationTools": {
                "type": "string",
                "enum": [
                    "internlm-xcomposer",
                    "gpt4o",
                    "qwen2vl",
                    "qwen25vl"
                ],
                "title": "TemporalLocalizationTools"
            },
            "TextToInstanceSegmentationResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "items": {
                                        "$ref": "#/components/schemas/Florence2SAM2IdInstance"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "TextToInstanceSegmentationResponse"
            },
            "TextToODModel": {
                "type": "string",
                "enum": [
                    "owlv2",
                    "countgd",
                    "florence2",
                    "agentic",
                    "glee",
                    "florencev2"
                ],
                "title": "TextToODModel"
            },
            "TextToSegModel": {
                "type": "string",
                "enum": [
                    "florence2sam2"
                ],
                "const": "florence2sam2",
                "title": "TextToSegModel"
            },
            "TrainItem": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "model": {
                        "$ref": "#/components/schemas/TrainItemModel"
                    },
                    "transforms": {
                        "$ref": "#/components/schemas/TrainItemTransforms"
                    }
                },
                "type": "object",
                "required": [
                    "model",
                    "transforms"
                ],
                "title": "TrainItem"
            },
            "TrainItemModel": {
                "properties": {
                    "architecture": {
                        "type": "string",
                        "title": "Architecture"
                    },
                    "hyperParams": {
                        "type": "object",
                        "title": "Hyperparams"
                    }
                },
                "type": "object",
                "required": [
                    "architecture",
                    "hyperParams"
                ],
                "title": "TrainItemModel"
            },
            "TrainItemTransforms": {
                "properties": {
                    "preprocessing": {
                        "items": {
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Preprocessing"
                    },
                    "augmentations": {
                        "anyOf": [
                            {
                                "items": {
                                    "additionalProperties": {
                                        "type": "object"
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Augmentations"
                    }
                },
                "type": "object",
                "required": [
                    "preprocessing"
                ],
                "title": "TrainItemTransforms"
            },
            "TrainingItem": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/JobStatus"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "status"
                ],
                "title": "TrainingItem"
            },
            "TrainingResponseData": {
                "properties": {
                    "trainingId": {
                        "type": "string",
                        "title": "Trainingid"
                    }
                },
                "type": "object",
                "required": [
                    "trainingId"
                ],
                "title": "TrainingResponseData"
            },
            "TrainingStatus": {
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/JobStatus"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "TrainingStatus"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "Verbosity": {
                "type": "string",
                "enum": [
                    "none",
                    "brief",
                    "normal",
                    "detailed"
                ],
                "title": "Verbosity"
            },
            "VideoTemporalLocalizationResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "VideoTemporalLocalizationResponse"
            },
            "VisualPromptsToODModel": {
                "type": "string",
                "enum": [
                    "countgd"
                ],
                "const": "countgd",
                "title": "VisualPromptsToODModel"
            },
            "WSIEmbeddingRequest": {
                "properties": {
                    "image": {
                        "type": "string",
                        "maxLength": 50000000,
                        "title": "Image"
                    },
                    "mpp": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mpp",
                        "description": "Microns per pixel"
                    }
                },
                "type": "object",
                "required": [
                    "image"
                ],
                "title": "WSIEmbeddingRequest"
            },
            "WSIEmbeddingResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WSIEmbeddingResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "WSIEmbeddingResponse"
            },
            "WSIEmbeddingResponseData": {
                "properties": {
                    "embedding": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "title": "Embedding"
                    }
                },
                "type": "object",
                "required": [
                    "embedding"
                ],
                "title": "WSIEmbeddingResponseData"
            },
            "routers__tools__agentic_doc_analysis__DocAnalysisRequest": {
                "properties": {
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "pdf": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pdf"
                    },
                    "include_marginalia": {
                        "type": "boolean",
                        "title": "Include Marginalia",
                        "default": true
                    },
                    "include_metadata_in_markdown": {
                        "type": "boolean",
                        "title": "Include Metadata In Markdown",
                        "default": true
                    }
                },
                "type": "object",
                "title": "DocAnalysisRequest"
            },
            "routers__tools__agentic_od__FormData": {
                "properties": {
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    },
                    "prompts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "maxItems": 1,
                        "minItems": 1,
                        "title": "Prompts"
                    }
                },
                "type": "object",
                "required": [
                    "prompts"
                ],
                "title": "FormData"
            },
            "routers__tools__doc_analysis__DocAnalysisRequest": {
                "properties": {
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "pdf": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pdf"
                    },
                    "parse_text": {
                        "type": "boolean",
                        "title": "Parse Text",
                        "default": true
                    },
                    "parse_tables": {
                        "type": "boolean",
                        "title": "Parse Tables",
                        "default": true
                    },
                    "parse_figures": {
                        "type": "boolean",
                        "title": "Parse Figures",
                        "default": true
                    },
                    "summary_verbosity": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Verbosity"
                            }
                        ],
                        "default": "normal"
                    },
                    "return_chunk_crops": {
                        "type": "boolean",
                        "title": "Return Chunk Crops",
                        "default": false
                    },
                    "return_page_crops": {
                        "type": "boolean",
                        "title": "Return Page Crops",
                        "default": false
                    },
                    "caption_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OutputFormat"
                            }
                        ],
                        "default": "json"
                    },
                    "response_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OutputFormat"
                            }
                        ],
                        "default": "json"
                    },
                    "filename": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Filename"
                    }
                },
                "type": "object",
                "title": "DocAnalysisRequest"
            },
            "routers__tools__florence2_sam2__FormData": {
                "properties": {
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    },
                    "prompts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Prompts"
                    },
                    "chunk_length": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Length"
                    },
                    "iou_threshold": {
                        "type": "number",
                        "maximum": 1.0,
                        "minimum": 0.1,
                        "title": "Iou Threshold",
                        "default": 0.6
                    },
                    "nms_threshold": {
                        "type": "number",
                        "maximum": 1.0,
                        "minimum": 0.1,
                        "title": "Nms Threshold",
                        "default": 1.0
                    }
                },
                "type": "object",
                "required": [
                    "prompts"
                ],
                "title": "FormData"
            },
            "routers__tools__image_to_text__FormData": {
                "properties": {
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    },
                    "images": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Images"
                    },
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    },
                    "model": {
                        "$ref": "#/components/schemas/ImageToText"
                    }
                },
                "type": "object",
                "required": [
                    "prompt",
                    "model"
                ],
                "title": "FormData"
            },
            "routers__tools__object_detection__FormData": {
                "properties": {
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    },
                    "deployment_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Deployment Id"
                    },
                    "confidence": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confidence"
                    }
                },
                "type": "object",
                "required": [
                    "deployment_id"
                ],
                "title": "FormData"
            },
            "routers__tools__text_to_instance_segmentation__FormData": {
                "properties": {
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    },
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    },
                    "model": {
                        "$ref": "#/components/schemas/TextToSegModel"
                    },
                    "chunkLengthFrames": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunklengthframes"
                    },
                    "iouThreshold": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": 0.1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Iouthreshold"
                    },
                    "nmsThreshold": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": 0.1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Nmsthreshold"
                    },
                    "jobId": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Jobid"
                    }
                },
                "type": "object",
                "required": [
                    "prompt",
                    "model"
                ],
                "title": "FormData"
            },
            "routers__tools__text_to_object_detection__FormData": {
                "properties": {
                    "image": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    },
                    "video": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Video"
                    },
                    "prompts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "minItems": 1,
                        "title": "Prompts"
                    },
                    "model": {
                        "$ref": "#/components/schemas/TextToODModel"
                    },
                    "nmsThreshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Nmsthreshold"
                    },
                    "confidence": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confidence"
                    },
                    "jobId": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Jobid"
                    }
                },
                "type": "object",
                "required": [
                    "prompts",
                    "model"
                ],
                "title": "FormData"
            },
            "routers__tools__video_temporal_localization__FormData": {
                "properties": {
                    "video": {
                        "type": "string",
                        "format": "binary",
                        "title": "Video"
                    },
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    },
                    "model": {
                        "$ref": "#/components/schemas/TemporalLocalizationTools"
                    },
                    "chunk_length": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Length"
                    },
                    "chunk_length_seconds": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Length Seconds"
                    },
                    "chunk_length_frames": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Length Frames"
                    }
                },
                "type": "object",
                "required": [
                    "video",
                    "prompt",
                    "model"
                ],
                "title": "FormData"
            }
        }
    }
}